---
title: "Cardiovascular_Risk_Analysis_Report:Home_Work"
author: "Baodong Zhang"
format: pdf
date: "2025-01-12"
echo: false
warning: false   
message: false   
output: true
cache: true
editor: visual
fig-width: 3
fig-height: 2
fig-align: center
latex-options: [fontsize=10pt]
geometry: "top=1in, bottom=1in, left=1in, right=1in"
header-includes:
  - \usepackage[table,xcdraw]{xcolor}
bibliography: references.bib
---

## Introduction

Cardiovascular diseases (CVD) are a leading cause of mortality worldwide [@who-cvd]. This report investigates whether cardiovascular disease (variable \`cardio\`) can be explained by other variables such as age, gender, glucose level, BMI, and lifestyle factors like smoking, alcohol consumption, and physical activity. The analysis is based on a dataset containing various health metrics.

\newpage

## Chapter 1: Data Preparation

Task 1: Transform the variables of the data set to appropriate data types and assign factor labels for the categorical variables.

```{r}
# Load required libraries
library(dplyr)
library(knitr)
library(kableExtra)
library(tidyr) 
library(ggplot2)
library(stringr)

# File path for the dataset
data_file <- "data_cardio.csv"

# Load the data using read.csv2 (semicolon-separated)
data_raw <- read.csv2(data_file)

# Data preprocessing
data_0 <- data_raw %>%
  mutate(
    age = round(age / 365, 2), 
    weight = as.numeric(weight), 
    #BMI = weight / ((height / 100)^2),
    smoke = smoke + 1, # for future factor conversion (to align with factor levels)
    alco = alco + 1, 
    active = active + 1, 
    cardio = cardio + 1 
  )

# Specify columns to be converted into factors
columns_to_factor <- c(
  "gender",
  "cholesterol",
  "gluc",
  "smoke",
  "alco",
  "active",
  "cardio"
)

# Define labels for factor levels for each column
labels_list <- list(
  gender = c("Male", "Female"),
  cholesterol = c("normal", "above normal", "well above normal"),
  gluc = c("normal", "above normal", "well above normal"),
  smoke = c("no", "yes"),
  alco = c("no", "yes"),
  active = c("no", "yes"),
  cardio = c("absent", "present")
)

# Apply factor conversion with custom labels
data <- data_0 %>%
  mutate(across(
    all_of(names(labels_list)), # Apply to columns specified in labels_list
    ~ factor(., 
             levels = seq_along(labels_list[[cur_column()]]), # Define levels as sequential indices
             labels = labels_list[[cur_column()]]) # Assign custom labels
  ))

# Create a summary for each variable manually
summary_data <- data.frame(
  variable = names(data),                          
  class = sapply(data, class),                     
  unique_values = sapply(data, function(x) length(unique(x))), 
  example_values = sapply(data, function(x) paste(head(unique(x), 5), collapse = ", ")) 
)

# convert a table into a kable function
kable_table_func <- function(df, title){
  kable(df, format = "latex", caption = title) %>%
  kable_styling(
    latex_options = c("striped", "hold_position"),
    full_width = FALSE,
    #position = "center"
  ) %>%
  row_spec(0, bold = TRUE, background = "#D3D3D3") 
}

# convert into a kable table
kable_table_func(summary_data, "Data Overview")
```

\newpage

## Chapter 2: Outlier Detection

Task 2: Check the continuous variables for outliers and remove implausible values.

```{r, results='asis'}
#| echo: false
continuous_variables <- c("age", "height", "weight", "ap_hi", "ap_lo") 

# Generate the summary statistics for continuous variables
summary_table2 <- summary(data[continuous_variables])

# convert into a kable table
kable_table_func(summary_table2, "Summary of Continuous Variables")

# Visualize each variable
# Define the list of continuous variables
continuous_variables <- c("age", "height", "weight", "ap_hi", "ap_lo")

# Define the generate_box_plots function
generate_box_plots <- function(data, continuous_variables) {
 
  # Loop through each variable and create plots
  for (var in continuous_variables) {
    # Generate a boxplot
    boxplot <- ggplot(data, aes(y = .data[[var]])) +
      geom_boxplot(fill = "lightblue", color = "darkblue", outlier.color = "red", outlier.shape = 16) +
      labs(title = paste("Boxplot of", var), y = var) +
      theme_minimal() +
      theme(
        plot.title = element_text(hjust = 0.5),
        axis.line = element_line(linewidth = 0.5),  # 
        panel.grid.major = element_line(linewidth = 0.2),
        panel.grid.minor = element_line(linewidth = 0.1)
        )
    print(boxplot)
  }
}
```

**Boxplot before outliers are removed**:

```{r fig.align='center'}
generate_box_plots(data, continuous_variables)
```

```{r}

# Function to remove outliers using the IQR method
remove_outliers <- function(x, factor = 1.5) {
  q1 <- quantile(x, 0.25, na.rm = TRUE)
  q3 <- quantile(x, 0.75, na.rm = TRUE)
  iqr <- q3 - q1
  lower_bound <- q1 - factor * iqr
  upper_bound <- q3 + factor * iqr
  x[x < lower_bound | x > upper_bound] <- NA
  return(x)
}

# Set thresholds for plausible values (based on domain knowledge)
plausible_thresholds <- list(
  age = c(0, 120),
  height = c(50, 250),
  weight = c(40, 300),
  ap_hi = c(60, 250),
  ap_lo = c(40, 150)
)

# Loop through each variable to clean outliers and implausible values
data_clean <- data
for (var in continuous_variables) {
  # Replace outliers with NA
  data_clean[[var]] <- remove_outliers(data_clean[[var]], factor = 3)
  # Apply plausible thresholds
  min_val <- plausible_thresholds[[var]][1]
  max_val <- plausible_thresholds[[var]][2]
  data_clean <- data_clean[data_clean[[var]] >= min_val & data_clean[[var]] <= max_val, ]
}

# remove the NA rows
data_clean <- na.omit(data_clean)
```

\newpage

```{r}
# Generate the summary statistics for continuous variables outlier free
summary_table_clean <- summary(data_clean[continuous_variables])

# convert into a kable table
kable_table_func(summary_table_clean, "Summary of Continuous Variables (outliers are removed)")
```

**Boxplot after outliers are removedï¼š**

```{r fig.align='center'}
generate_box_plots(data_clean, continuous_variables)
```

\newpage

## Chapter 3: BMI Calculation

Task 3: Create a new variable BMI and provide a summary table for the variable BMI for both cardio groups.

```{r}
# Calculate BMI (Body Mass Index) 
df <- data_clean %>% 
  mutate(
    BMI = weight / ((height / 100)^2)  
  )

# Create a summary table grouped by 'cardio'
summary_table_3 <- df %>%
  group_by(cardio) %>%
  summarize(
    count = n(),
    mean_BMI = round(mean(BMI), 2),     # rounded to 2 decimal places
    median_BMI = round(median(BMI), 2), 
    sd_BMI = round(sd(BMI), 2),         
    min_BMI = round(min(BMI), 2),      
    max_BMI = round(max(BMI), 2)        
  ) %>%
  ungroup()

# T test for the  BMI means in two cardio groups
t_test_result <- t.test(BMI ~ cardio, data = df, var.equal = TRUE)
# convert into a kable table
kable_table_func(summary_table_3, "Summary table for BMI grouped by cardio")
```

The two-sample t-test, under the assumptions of normality and independence of observations, indicated a significant difference in mean BMI between individuals without cardiovascular disease and those with the disease. Assuming equal variances, the test yielded a a p-value `r t_test_result$p.value``. This suggesting that individuals with CVD tend to have significantly higher BMI than those without.


\newpage

## Chapter 4: Correlation Between BMI and Systolic Blood Pressure

Task 4: How does the systolic blood pressure (SBP) and the BMI correlate to each other? Is there any difference between the two classes of cardiovascular disease?

```{r}
# Function 1: Calculate Pearson correlation
calculate_correlation <- function(data, col_BMI, col_bp_type) {
  #correlation <- cor(data[[col_BMI]], data[[col_bp_type]], method = "pearson", use = "complete.obs")
  result <- cor.test(data[[col_bp_type]], data[[col_BMI]], method = "pearson")
  correlation <- unname(result$estimate)
  p_value <- result$p.value
  return(list(correlation = correlation, p_value = p_value))
}
  

# Function 2: Create and display scatter plot
create_scatter_plot <- function(data, col_BMI, col_bp_type, group_col = NA) {
  # valid col_bp_type
  bp_type_name <- if (col_bp_type == "ap_hi") {
    "Systolic"
  } else if (col_bp_type == "ap_lo") {
    "Diastolic"
  } else {
    stop("Invalid bp_type column name. Please use 'ap_hi' for Systolic or 'ap_lo' for Diastolic.")
  }

  # plot basic graph
  scatter_plot <- ggplot(data, aes(x = .data[[col_BMI]], y = .data[[col_bp_type]])) +
    geom_point(alpha = 0.5, aes(color = if (!is.na(group_col)) .data[[group_col]] else "ALL Data")) +
    labs(
      title = paste("Correlation between BMI and", bp_type_name, "Blood Pressure"),
      x = "BMI",
      y = paste(bp_type_name, "Blood Pressure (mmHg)"),
      color = if (!is.na(group_col)) group_col else NULL
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(size = 10, hjust = 0.5),
      plot.margin = margin(15, 15, 15, 15)
    )

  # Add smooth line
  if (!is.na(group_col)) {
    # If there are groups add lines separately.
    scatter_plot <- scatter_plot +
      geom_smooth(aes(color = .data[[group_col]]), method = "lm", se = FALSE)
  } else {
    # otherwise only one line
    scatter_plot <- scatter_plot +
      geom_smooth(method = "lm", color = "blue", se = FALSE)
  }

  # print
  print(scatter_plot)
}

# Function 3: Group by `cardio` and calculate correlation and p-value for each group
calculate_correlation_by_group <- function(data, BMI, bp_type, group = "cardio") {
  data %>%
    group_by(.data[[group]]) %>%
    summarize(
      Correlation = cor.test(.data[[BMI]], .data[[bp_type]], method = "pearson", use = "complete.obs")$estimate
      #P_value = cor.test(.data[[BMI]], .data[[bp_type]], method = "pearson", use = "complete.obs")$p.value
    )
}

```

```{r}

# calculate the correlation coefficient: "BMI" and "ap_hi"(Systolic blood pressure)
result_1 <- calculate_correlation(df, "BMI", "ap_hi")
correlation <- result_1$correlation
p_value <- result_1$p_value

```

```{r fig.align='center'}
#| fig-width: 6
#| fig-height: 5

# scatter plot of "BMI" and "ap_hi"
create_scatter_plot(df, "BMI", "ap_hi", group_col= NA)
```

Answer: The correlation coefficient between BMI and Systolic Blood Pressure (SBP) is `r correlation`, indicating a weak positive correlation. The p-value is `r p_value`, showing that this weak positive correlation is statistically significant across the dataset.

To determine whether there is a difference between the two classes of cardiovascular disease, we will calculate the correlation coefficients for each class separately and conduct a Fisher's Z-test.

```{r fig.align='center'}
#| fig-width: 6
#| fig-height: 5
# scatter plot of "BMI" and "ap_hi"
create_scatter_plot(df, "BMI", "ap_hi", group_col= "cardio")
```

```{r}
#Group by `cardio` and calculate the above correlation for each group
correlation_by_cardio_ap_hi <- calculate_correlation_by_group(df, BMI = "BMI", bp_type = "ap_hi", group = "cardio")

# convert into a kable table
kable_table_func(correlation_by_cardio_ap_hi, "Correlation between BMI and Systolic blood pressure grouped by cardio")
```

```{r}
# Is there any difference between the two classes of cardiovascular disease?
# Build a function to perform the statistical test of the Correlations coefficient between two groups 
compare_BMI_BLT_correlations_of_diease_nondiease <- function(correlation_by_cardio_BPT, data) {
  # Step 1: Extract correlations for the two groups
  r1 <- correlation_by_cardio_BPT$Correlation[correlation_by_cardio_BPT$cardio == "absent"]
  r2 <- correlation_by_cardio_BPT$Correlation[correlation_by_cardio_BPT$cardio == "present"]
  
  if (length(r1) == 0 | length(r2) == 0) {
    stop("Both groups (cardio == 0 and cardio == 1) must have correlations.")
  }
  
  # Step 2: Calculate Fisher's Z transformation
  z1 <- atanh(r1)  # Fisher's Z for group 1
  z2 <- atanh(r2)  # Fisher's Z for group 2
  
  # Step 3: Calculate standard error and Z-score
  n1 <- sum(data$cardio == "absent", na.rm = TRUE)  # Sample size for group 1
  n2 <- sum(data$cardio == "present", na.rm = TRUE)  # Sample size for group 2
  
  if (n1 <= 3 | n2 <= 3) {
    stop("Sample sizes in both groups must be greater than 3.")
  }
  
  se <- sqrt(1 / (n1 - 3) + 1 / (n2 - 3))
  z_score <- (z1 - z2) / se
  
  # Step 4: Calculate p-value
  p_value <- 2 * (1 - pnorm(abs(z_score)))
  
  # Return results as a list
  return(list(Z_score = z_score, P_value = p_value))
}

results_ap_hi <- compare_BMI_BLT_correlations_of_diease_nondiease(correlation_by_cardio_ap_hi, df)

results_ap_hi_df <- data.frame(
  Metric = names(results_ap_hi),
  Value = unlist(results_ap_hi),
  row.names = NULL
)

# # convert into a kable table
kable_table_func(results_ap_hi_df, "Fisher's Z-test for Correlations between BMI and Systolic blood pressure grouped by cardio")
```

Based on the Fisher's Z-test, the Z score is `r results_ap_hi$Z_score` and the P value is `r results_ap_hi$P_value`. The correlation between BMI and Systolic Blood Pressure shows no statistically significant difference between the two AVD groups, suggesting the results may be due to random variation rather than a meaningful effect.

\newpage

## Chapter 5: Correlation between BMI and Diastolic blood pressure.

Task 5: Answer the same question for the diastolic blood pressure.

```{r}
# calculate the correlation cofficient between BMI and Diastolic blood pressure
result_2 <- calculate_correlation(df, "BMI", "ap_lo") 
correlation_lo <- result_2$correlation
p_value_lo <- result_2$p_value
```

The Correlation Between BMI and Diastolic blood pressure is `r correlation_lo` and p-value is `r p_value_lo`.

```{r fig.align='center'}
#| fig-width: 6
#| fig-height: 5



# scatter_plot
create_scatter_plot(df, "BMI", "ap_lo", group_col= NA) 

# calculate the correlation between BMI and ap_lo by group
correlation_by_cardio_ap_lo <- calculate_correlation_by_group(df, BMI = "BMI",  bp_type = "ap_lo", group = "cardio") 
#print(correlation_by_cardio_ap_lo) 

# convert into a kable table
kable_table_func(correlation_by_cardio_ap_lo, "Correlation between BMI and Diastolic blood pressure grouped by cardio")
create_scatter_plot(df, "BMI", "ap_lo", group_col= "cardio") 

results_ap_lo <- compare_BMI_BLT_correlations_of_diease_nondiease(correlation_by_cardio_ap_lo, df)

results_ap_lo_df <- data.frame(
  Metric = names(results_ap_lo),
  Value = unlist(results_ap_lo),
  row.names = NULL
)

# # convert into a kable table
kable_table_func(results_ap_lo_df, "Fisher's Z-test for Correlations between BMI and Diastolic blood pressure grouped by cardio")
```

Answer: The correlation coefficient between BMI and Diastolic Blood Pressure (DBP) is `r correlation_lo`, indicating a weak positive correlation. The p-value is `r p_value_lo`, suggesting that this correlation is statistically significant across the dataset.

Based on Fisher's Z-test, the Z-score is `r results_ap_lo$Z_score`, and the P-value is `r results_ap_lo$P_value`. These results show no statistically significant difference in the correlation coefficients between BMI and Diastolic Blood Pressure across the two groups of individuals with/without cardiovascular disease. The observed outcomes may be attributed to random variation rather than a meaningful effect.

\newpage

## Chapter 6: Categorize BMI into Quartiles and Visualize its Distribution Across Cardio Types

Task 6: Categorize the variable BMI according to its quartiles and visualize the distribution of the BMI categories in both cardio types.

```{r fig.align='center'}
#| fig-width: 5
#| fig-height: 4
# Categorize BMI into quartiles

df <- df %>%
  mutate(
    BMI_category = cut(BMI,
                       breaks = quantile(BMI, probs = seq(0, 1, 0.25),
                                         na.rm = TRUE),
                       include.lowest = TRUE,
                       labels = c("Q1 (Lowest)", "Q2", "Q3", "Q4 (Highest)"))
    )

#Group data and count occurrences

bmi_cardio_distribution <- df %>%
  group_by(BMI_category, cardio) %>%
  summarise(count = n(), .groups = "drop")
# # convert into a kable table
kable_table_func(bmi_cardio_distribution, "BMI Quartiles Distribution Across Cardio Types")

# Plot the distribution

ggplot(bmi_cardio_distribution, aes(x = BMI_category, y = count, fill = as.factor(cardio))) +
  geom_bar(stat = "identity", position = "stack") + #position_dodge()) + 
  labs(title = "Distribution of BMI Categories in Cardio Types",
       x = "BMI Category",
       y = "Count",
       fill = "Cardio") +
  scale_fill_manual(values = c("absent" = "orange", "present" = "red"),
                    labels = c("No (absent)", "Yes (present)")) +
  theme_minimal()

bmi_cardio_heatmap <- df %>%
  group_by(BMI_category, cardio) %>%
  summarise(count = n(), .groups = "drop")


ggplot(bmi_cardio_heatmap, aes(x = BMI_category, y = as.factor(cardio), fill = count)) +
  geom_tile() +
  labs(title = "BMI Category vs Cardio (Heatmap)",
       x = "BMI Category",
       y = "Cardio",
       fill = "Count") +
  scale_fill_gradient(low = "#FFE4B5", high = "#FF4500") +  
  theme_minimal()

```

Conclusion from the Heatmap:The heatmap shows a positive association between BMI and cardiovascular disease. Higher BMI quartiles have more individuals with cardiovascular conditions ("present") and fewer without ("absent"). This suggests that as BMI increases, the likelihood of cardiovascular disease also rises.

\newpage

## Chapter 7: Age Distribution Across Cardio Categories (in Years)

Task 7: How is age distributed in the different categories of cardio? Display age in years.

```{r fig.align='center'}
#| fig-width: 5
#| fig-height: 4

# Summarize age distribution for each cardio group
summary_age_by_cardio <- df %>%
  group_by(cardio) %>%
  summarize(
    Count = n(),
    Mean_Age = mean(age),
    Median_Age = median(age),
    Min_Age = min(age),
    Max_Age = max(age),
    SD_Age = sd(age)
  )
# convert into kable table
kable_table_func(summary_age_by_cardio, "Summarize age distribution for each cardio group")
# T test for the  BMI means in two cardio groups
t_test_result_2 <- t.test(age ~ cardio, data = df, var.equal = TRUE)
```
The two-sample t-test, assuming normality, independence, and equal variances, showed a significant difference in mean age between individuals with and without cardiovascular disease (p-value `r t_test_result_2$p.value`), indicating that those with CVD tend to have elder age.

\newpage

## Chapter 8: Visualizing the Age Distribution by Gender and CVD Status

Task 8: Create a plot that shows the distribution of age for both types of gender and both types of cardio

```{r fig.align='center'}
#| fig-width: 5
#| fig-height: 4

# Faceted histogram by gender and cardio
ggplot(df, aes(x = age, fill = factor(cardio))) +
  geom_histogram(binwidth = 5, color = "black", alpha = 0.7, position = "dodge") +
  facet_wrap(~ gender, ncol = 2) +
  labs(
    title = "Distribution of Age by Gender and Cardio Categories",
    x = "Age (years)",
    y = "Count",
    fill = "Cardio"
  ) +
  scale_fill_manual(values = c("absent" = "blue", "present" = "red"),
                    labels = c("No Cardio", "Yes Cardio")) +
  theme_minimal()


ggplot(df, aes(x = as.factor(gender), y = age, fill = as.factor(cardio))) +
  geom_boxplot(alpha = 0.7) +
  facet_wrap(~ as.factor(cardio), labeller = labeller(.default = c("absent" = "No Cardio", "present" = "Yes Cardio"))) +
  labs(title = "Age Box Plot by Gender and  CVD Status",
       x = "Gender (1 = Female, 2 = Male)",
       y = "Age (Years)",
       fill = "Cardio") +
  scale_fill_manual(values = c("absent" = "blue", "present" = "red"),
                    labels = c("No Cardio", "Yes Cardio")) +
  theme_minimal()
```
Conclusion: 
Age distribution shows that individuals with cardiovascular disease are generally older than those without the disease, and this pattern is consistent across both genders. Both males and females with cardiovascular disease have higher ages compared to their counterparts without the disease. This indicates that age is a significant risk factor for cardiovascular disease, regardless of gender.

\newpage

## Chapter 9: Age Distribution with Glucose Levels

Task 9. Extend this plot by taking the different types of glucose into account.

```{r fig.align='center'}
#| fig-width: 6
#| fig-height: 5
# Create the plot with glucose levels as facets

ggplot(df, aes(x = as.factor(gender), y = age, fill = gluc)) +
  geom_boxplot(alpha = 0.7) +
  facet_grid(as.factor(cardio) ~ as.factor(gluc), 
             labeller = labeller(cardio = c("absent" = "No Cardio", "present" = "Yes Cardio"),
                                 gluc = c("normal" = "Normal", "above normal" = "Above", "well above normal" = "Well Above"))) +
  labs(
    title = "Age Distribution by Gender, Glucose Levels, and CVD Status",
    x = "Gender (1 = Female, 2 = Male)",
    y = "Age (Years)",
    fill = "gluc"
  ) +
  scale_fill_manual(
    values = c("normal" = "lightgreen", "above normal" = "orange", "well above normal" = "red"),
    labels = c("Normal", "Above", "WellAbove")
  ) +
  theme_minimal()

```

Age and Glucose Levels:
Among individuals with normal blood glucose levels, those with cardiovascular disease generally have a higher median age compared to those without. However, in groups with elevated or very high blood glucose levels, the difference in median age between individuals with and without cardiovascular disease is less pronounced, particularly among females.

Gender-Specific Observations:
We observe that in the population with very high glucose levels (glucose level = "high"), females are generally younger than males, indicating that women may develop blood sugar issues at a younger age.


\newpage

## Chapter 10: Risk Factors for CVD: Comparing Lifestyle Parameters Using Ï‡Â² Tests

Task 10: Further risk factors for a cardiovascular disease may be smoking, alcohol, and insufffcient physical activity. Create plots and an overview table of how these three parameters are distributed between the two types of cardio and compare all three with a Ï‡ 2 -test, respectively. Draw a conclusion about which of these parameters may be risk factors for cardiovascular diseases.

```{r fig.align='center'}
#| fig-width: 5
#| fig-height: 4

# Function to create distribution plots with overall proportions
create_distribution_plot <- function(df, variable) {
  # Calculate overall proportions
  prop_data <- df %>%
    group_by(.data[[variable]], cardio) %>%
    summarize(count = n(), .groups = "drop") %>%
    mutate(
      proportion = count / sum(count),  # Proportion relative to the entire dataset
      proportion_label = scales::percent(proportion, accuracy = 0.1)  # Format as percentages
    )
  
  # Create the plot
  ggplot(prop_data, aes(x = .data[[variable]], y = proportion, fill = cardio)) +
    geom_bar(stat = "identity", position = "stack") +
    geom_text(
      aes(label = proportion_label), 
      position = position_stack(vjust = 0.5), 
      size = 3
    ) +
    scale_fill_manual(
      values = c("absent" = "green", "present" = "red"),
      labels = c("No Disease", "Disease")
    ) +
    labs(
      title = paste(str_to_title(variable), "Distribution by Cardio Groups (Overall Proportion)"),
      x = variable,
      y = "Proportion of Total",
      fill = "Cardio Status"
    ) +
    theme_minimal()
}

# Define the variables to plot
variables <- c("smoke", "alco", "active")

# Create a list of plots dynamically
lapply(variables, function(var) {
  create_distribution_plot(df, variable = var)
})
```

```{r}
# Create a summary table considering the 'cardio' factor
summary_table <- df %>%
  group_by(cardio) %>%
  summarize(
    Smoking_Yes = sum(smoke == "yes"),
    Smoking_No = sum(smoke == "no"),
    Alcohol_Yes = sum(alco == "yes"),
    Alcohol_No = sum(alco == "no"),
    Active_Yes = sum(active == "yes"),
    Active_No = sum(active == "no")
  ) 

# Reshape the summary table into a vertical format
vertical_table <- summary_table %>%
  pivot_longer(
    cols = -cardio,  # Columns to reshape (all except 'cardio')
    names_to = "Category",  # Name for the new column with variable names
    values_to = "Count"  # Name for the new column with values
  ) %>% arrange(Category)
kable_table_func(vertical_table, "Summary of Lifestyle Factors Counts by Cardiovascular Risk Group")
```

```{r}

# Summarize the proportions of smoke, alco, and active for each cardio group.
overview_table <- df %>%
  group_by(cardio) %>%
  summarize(
    Smoking_Yes = round(sum(smoke == "yes") / n(), 4),
    Smoking_No = round(sum(smoke == "no") / n(), 4),
    Alcohol_Yes = round(sum(alco == "yes") / n(), 4),
    Alcohol_No = round(sum(alco == "no") / n(), 4),
    Active_Yes = round(sum(active == "yes") / n(), 4),
    Active_No = round(sum(active == "no") / n(), 4)
  )

long_table <- overview_table %>%
  pivot_longer(
    cols = -cardio, 
    names_to = "Category",
    #names_sep = "_", 
    values_to = "Proportion"
  ) %>%
  arrange(Category)

kable_table_func(long_table, "Proportions of Lifestyle Factors by Cardiovascular Risk Group")
```

```{r}
# Chi-Square test for Smoking
smoking_table <- table(df$smoke, df$cardio)
smoking_test <- chisq.test(smoking_table)

# Chi-Square test for Alcohol
alcohol_table <- table(df$alco, df$cardio)
alcohol_test <- chisq.test(alcohol_table)

# Chi-Square test for Physical Activity
activity_table <- table(df$active, df$cardio)
activity_test <- chisq.test(activity_table)

# Chi-Square test for glucose level
gluc_table <- table(df$gluc, df$cardio)
gluc_test <- chisq.test(gluc_table)

# Create a table to display the result.
test_results <- data.frame(
  Test = c("Smoking", "Alcohol", "Physical Activity", "Glucose Level"),
  Chi_Square_Statistic = c(smoking_test$statistic, alcohol_test$statistic, activity_test$statistic, gluc_test$statistic),
  Degrees_of_Freedom = c(smoking_test$parameter, alcohol_test$parameter, activity_test$parameter, gluc_test$parameter),
  p_Value = c(smoking_test$p.value, alcohol_test$p.value, activity_test$p.value, gluc_test$p.value)
)

kable_table_func(test_results, "Chi-Square Test Results for Risk Factors and Cardiovascular Risk")
```
Based on the p-values:

1.  **Smoking** and **Alcohol Consumption** : No significant association with cardiovascular diseases.

2.  **Physical Activity** and **Glucose Level** : Significant association, suggesting that insufficient activity and high glucose level are potential risk factors.

\newpage

## Chapter 11: Summary

### Analysis Steps:

1. Data Preparation: Variables were transformed into appropriate data types, and categorical variables were labeled for clarity.  

2. Outlier Detection: Continuous variables (age, height, weight, systolic blood pressure, and diastolic blood pressure) were analyzed for outliers, and missing values were excluded to ensure data quality.  

3. BMI and CVD: BMI was calculated and analyzed. Individuals with CVD had significantly higher BMI values compared to those without, as confirmed by a t-test.  

4. Correlation Analysis: Weak positive correlations were observed between BMI and both systolic and diastolic blood pressure. Fisherâ€™s Z-tests showed no significant differences in these correlations between CVD and non-CVD groups.  

5. BMI Distribution: BMI quartile analysis revealed a higher prevalence of CVD in the upper quartiles, supporting the link between increased BMI and cardiovascular disease.  

6. Age and CVD: CVD patients were older on average, with a statistically significant difference confirmed by a t-test.  

7. Lifestyle and Glucose Levels: Chi-square tests highlighted physical inactivity and elevated glucose levels as significant risk factors for CVD, while smoking and alcohol consumption showed no significant associations.  

### Key Findings:

- BMI and CVD: Higher BMI is linked to cardiovascular disease, with individuals in higher BMI quartiles at greater risk, consistent with previous studies showing increased CVD risk in overweight individuals [@hubert1983obesity].

- Glucose Levels and Age: Elevated glucose levels and older age also emerged as key factors linked to CVD.

- Physical Inactivity: Insufficient physical activity was identified as a significant modifiable risk factor for CVD, consistent with research emphasizing the same conclusion[@lee2012physical-inactivity].  

### Next Steps:

This analysis identified BMI, glucose levels, age, and physical inactivity as significant predictors of CVD. To better understand their combined impact, further steps include:

1. Advanced Modeling: Use logistic regression or other classification models to quantify each predictorâ€™s contribution.  

2. Performance Metrics: Assess model effectiveness using metrics like pseudo RÂ², AUC, and F1 score.

3. Future Research: Incorporate additional variables, such as cholesterol, blood pressure, dietary habits, genetics, and socioeconomic factors, to provide a more comprehensive understanding of CVD risk.

These approaches will help evaluate how well these factors collectively explain and predict cardiovascular disease.
\newpage

## References
